# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [1.8]
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
        server-id: github
    - name: Build with Maven
      run: mvn -B package --file pom.xml
  
  version:
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.event.pusher.email != 'revision-updater@redhat.com'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [1.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
         java-version: ${{matrix.java}}
       
      - name: Version rev with Maven
        run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}-SNAPSHOT versions:commit --file pom.xml
      - name: Commit files
        run: |
          git config --local user.email "revision-updater@redhat.com"
          git config --local user.name "Version Upgrader"
          git commit -m "Version upgrade" -a
          echo ::set-env name=TAG_NAME::$(mvn help:evaluate -Dexpression=project.version -DforceStdout)
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Jar
        run: mvn -B release:prepare -DignoreSnapshots -Dresume=false release:perform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  
